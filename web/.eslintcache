[{"D:\\htdocs\\Transitar\\web\\src\\index.tsx":"1","D:\\htdocs\\Transitar\\web\\src\\App.tsx":"2","D:\\htdocs\\Transitar\\web\\src\\routes.tsx":"3","D:\\htdocs\\Transitar\\web\\src\\pages\\notFound\\index.tsx":"4","D:\\htdocs\\Transitar\\web\\src\\pages\\home\\index.tsx":"5","D:\\htdocs\\Transitar\\web\\src\\pages\\invalid\\index.tsx":"6","D:\\htdocs\\Transitar\\web\\src\\pages\\success\\index.tsx":"7","D:\\htdocs\\Transitar\\web\\src\\api\\index.ts":"8"},{"size":198,"mtime":1614039076875,"results":"9","hashOfConfig":"10"},{"size":113,"mtime":1613955857193,"results":"11","hashOfConfig":"10"},{"size":725,"mtime":1614039240104,"results":"12","hashOfConfig":"10"},{"size":649,"mtime":1613962123926,"results":"13","hashOfConfig":"10"},{"size":3483,"mtime":1614038374595,"results":"14","hashOfConfig":"10"},{"size":932,"mtime":1614038234664,"results":"15","hashOfConfig":"10"},{"size":930,"mtime":1614038393208,"results":"16","hashOfConfig":"10"},{"size":199,"mtime":1614040036069,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"usd364",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\htdocs\\Transitar\\web\\src\\index.tsx",[],"D:\\htdocs\\Transitar\\web\\src\\App.tsx",[],["36","37"],"D:\\htdocs\\Transitar\\web\\src\\routes.tsx",[],"D:\\htdocs\\Transitar\\web\\src\\pages\\notFound\\index.tsx",[],"D:\\htdocs\\Transitar\\web\\src\\pages\\home\\index.tsx",["38"],"import \"./styles.css\";\r\nimport { ReactComponent as Logo } from \"../../assets/home.svg\";\r\nimport { ReactComponent as Transitar } from \"../../assets/transitar.svg\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport api from \"../../api\";\r\n\r\nexport default function Home() {\r\n  const { hash } = useParams<Record<string, string | undefined>>();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmepassword, setConfirmepassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`forgotPassword/${hash}`)\r\n      .then((response) => {\r\n        if (response.status === 404) {\r\n          history.push(\"/404\");\r\n        }\r\n        if (response.status === 401) {\r\n          history.push(\"/invalid\", { message: response.data.message });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro\");\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    if (password.trim() === \"\") {\r\n      toast.info(\"Preencha o campo Nova Senha\");\r\n    }\r\n    if (confirmepassword.trim() === \"\") {\r\n      toast.info(\"Preencha o campo Confirme nova senha\");\r\n    }\r\n    if (password.trim() !== confirmepassword.trim()) {\r\n      toast.info(\r\n        \"O campo nova senha e confirme nova senha precisam ser iguais\"\r\n      );\r\n    } else {\r\n      const data = {\r\n        password: password,\r\n        password2: confirmepassword,\r\n        hash: hash,\r\n      };\r\n      api\r\n        .post(\"forgotPassword/SaveNewPassword\", data)\r\n        .then((response) => {\r\n          if (response.status === 400) {\r\n            history.push(\"/invalid\", { message: response.data.message });\r\n          }\r\n          if (response.status === 500) {\r\n            toast.error(\r\n              \"Erro! Entre em contato com o administrador do sistema\"\r\n            );\r\n          }\r\n          if (response.status === 200) {\r\n            history.push(\"/success\", { message: response.data.message });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Erro\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ToastContainer />\r\n\r\n      <form className=\"form\">\r\n        <div className=\"containerLogo\">\r\n          <Logo className=\"logo\" />\r\n        </div>\r\n        <div className=\"containerTransitar\">\r\n          <Transitar />\r\n        </div>\r\n        <div className=\"containerTitle\">\r\n          <h3 className=\"title\">Redefina sua senha!</h3>\r\n        </div>\r\n        <div className=\"containerInput\">\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"Nova senha\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            id=\"password\"\r\n            name=\"password\"\r\n          />\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"Confirme nova senha\"\r\n            type=\"password\"\r\n            value={confirmepassword}\r\n            onChange={(event) => setConfirmepassword(event.target.value)}\r\n            id=\"confirmepassword\"\r\n            name=\"confirmepassword\"\r\n          />\r\n        </div>\r\n        <div className=\"containerBtn\">\r\n          <button className=\"btn\" type=\"button\" onClick={handleSubmit}>\r\n            Salvar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\htdocs\\Transitar\\web\\src\\pages\\invalid\\index.tsx",[],"D:\\htdocs\\Transitar\\web\\src\\pages\\success\\index.tsx",[],"D:\\htdocs\\Transitar\\web\\src\\api\\index.ts",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":31,"column":6,"nodeType":"45","endLine":31,"endColumn":8,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hash' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [hash, history]",{"range":"52","text":"53"},[1047,1049],"[hash, history]"]